{"version":3,"sources":["hooks/selectors/useProjectsSelector.js","components/Charts/NoData.js","components/Charts/ChartContainer.js","components/Charts/CircularChart.js","components/Charts/BarChart.js","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","../node_modules/@mui/material/Container/containerClasses.js","../node_modules/@mui/material/Container/Container.js","components/Charts/LineChart.js","components/Dashboard/TasksCompletedLineChart.js","components/Dashboard/MostTasksBarChart.js","components/Dashboard/PriorityBarChart.js","components/Dashboard/TasksDonutChart.js","components/Dashboard/TechPieChart.js","components/Dashboard/Dashboard.js","screens/Dashboard/Dashboard.js"],"names":["useProjectsSelector","useSelector","state","projects","NoData","loading","smScreen","useMediaQuery","theme","breakpoints","down","height","position","align","color","className","ChartContainer","children","sx","px","pt","CircularChart","type","title","labels","series","fillColors","labelColors","strokeColors","legendOffset","isDark","useThemeSelector","options","getChartOptions","tooltip","responsive","breakpoint","legend","show","plotOptions","pie","expandOnClick","donut","offsetY","length","BarChart","horizontal","isMultiColor","xLabels","bar","distributed","columnWidth","xaxis","categories","data","GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","map","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","lg","md","sm","xl","xs","zeroMinWidth","root","_extends","boxSizing","display","flexWrap","width","margin","minWidth","handleBreakpoints","propValue","output","flexDirection","indexOf","maxWidth","rowSpacing","themeSpacing","marginTop","paddingTop","columnSpacing","marginLeft","paddingLeft","keys","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","resolveBreakpointValues","values","columns","base","Math","round","more","fullWidth","Object","assign","up","generateGrid","Grid","inProps","ref","element","themeProps","useThemeProps","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","Provider","value","getContainerUtilityClass","ContainerRoot","capitalize","fixed","disableGutters","marginRight","paddingRight","acc","unit","max","Container","LineChart","smooth","stroke","curve","enabled","yaxis","formatter","toFixed","markers","TasksCompletedLineChart","useState","taskCountObj","setTaskCountObj","drawing","setDrawing","useEffect","taskObjsArr","project","push","tasks","doneTasksObjsArr","flat","filter","task","tasksCountOnDateObj","forEach","taskDate","Date","updatedAt","toLocaleDateString","day","month","year","dates","sort","a","b","finalTasksCount","slice","date","Typography","variant","MostTasksBarChart","projectTasksObj","setProjectTasksObj","tasksByProjectObj","sortedProjectNames","tasksByProjectObjFinal","projectName","areAllValuesZeros","isZerosArr","PriorityBarChart","priorityCountObj","setPriorityCountObj","taskPriorityCountObj","low","medium","high","taskObj","priority","mb","TasksDonutChart","taskTypeCountObj","setTaskTypeCountObj","typeCountObj","todo","in_progress","done","TechPieChart","techCountObj","setTechCountObj","dispatch","useDispatch","getProjects","techObjsArr","technologies","techArr","techObj","technology","toLowerCase","techCountMap","tech","Dashboard","fontWeight","justifyContent"],"mappings":"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","file":"static/js/11.4496a81c.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nfunction useProjectsSelector() {\r\n  const projectsState = useSelector((state) => state.projects);\r\n  return projectsState;\r\n}\r\n\r\nexport default useProjectsSelector;\r\n","import useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport Spinner from \"../Shared/Loaders/Spinner\";\r\n\r\nfunction NoData({ loading }) {\r\n  const smScreen = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n\r\n  return (\r\n    <Box height={smScreen ? 300 : 400} position=\"relative\">\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"text.secondary\"\r\n          className=\"center-absolute\"\r\n        >\r\n          Nothing to see here\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NoData;\r\n","import Paper from \"@mui/material/Paper\";\r\n\r\nfunction ChartContainer({ children }) {\r\n  return <Paper sx={{ px: 2, pt: 3, height: \"100%\" }}>{children}</Paper>;\r\n}\r\n\r\nexport default ChartContainer;\r\n","import Chart from \"react-apexcharts\";\r\n\r\nimport { getChartOptions } from \"../../constants\";\r\nimport useThemeSelector from \"../../hooks/selectors/useThemeSelector\";\r\nimport NoData from \"./NoData\";\r\n\r\nfunction CircularChart({\r\n  type = \"pie\",\r\n  title,\r\n  labels,\r\n  series,\r\n  fillColors,\r\n  labelColors,\r\n  strokeColors,\r\n  legendOffset = 0,\r\n}) {\r\n  const { isDark } = useThemeSelector();\r\n\r\n  const options = {\r\n    ...getChartOptions({\r\n      title,\r\n      isDark,\r\n      fillColors,\r\n      labelColors,\r\n      strokeColors,\r\n    }),\r\n\r\n    labels,\r\n    tooltip: {\r\n      theme: \"dark\",\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 480,\r\n        options: {\r\n          legend: {\r\n            show: false,\r\n          },\r\n          plotOptions: {\r\n            pie: {\r\n              expandOnClick: false,\r\n              donut: {\r\n                labels: {\r\n                  show: type === \"donut\",\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    legend: {\r\n      position: \"right\",\r\n      offsetY: legendOffset,\r\n    },\r\n  };\r\n\r\n  return !series?.length ? (\r\n    <NoData />\r\n  ) : (\r\n    <Chart type={type} options={options} series={series} />\r\n  );\r\n}\r\n\r\nexport default CircularChart;\r\n","import useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport { getChartOptions } from \"../../constants\";\r\nimport useThemeSelector from \"../../hooks/selectors/useThemeSelector\";\r\nimport NoData from \"./NoData\";\r\n\r\nfunction BarChart({\r\n  horizontal = false,\r\n  isMultiColor,\r\n  title,\r\n  xLabels,\r\n  series,\r\n  fillColors,\r\n  strokeColors,\r\n}) {\r\n  const smScreen = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n  const { isDark } = useThemeSelector();\r\n\r\n  const options = {\r\n    ...getChartOptions({\r\n      title,\r\n      isDark,\r\n      fillColors,\r\n      strokeColors,\r\n    }),\r\n\r\n    plotOptions: {\r\n      bar: {\r\n        distributed: isMultiColor,\r\n        columnWidth: \"60%\",\r\n        horizontal,\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    xaxis: {\r\n      categories: xLabels,\r\n    },\r\n  };\r\n\r\n  return !series?.length || !series[0]?.data?.length ? (\r\n    <NoData />\r\n  ) : (\r\n    <Chart\r\n      type=\"bar\"\r\n      options={options}\r\n      series={series}\r\n      height={smScreen ? 300 : 400}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, ownerState) {\n  const size = ownerState[breakpoint];\n\n  if (!size) {\n    return;\n  }\n\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      flexShrink: 0,\n      maxWidth: 'none',\n      width: 'auto'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: ownerState.columns,\n      base: theme.breakpoints.values\n    }); // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnsBreakpointValues[breakpoint] * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateDirection({\n  theme,\n  ownerState\n}) {\n  return handleBreakpoints({\n    theme\n  }, ownerState.direction, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\n\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacing, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacing, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.ownerState;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, ownerState.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  ownerState\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, ownerState);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp = 12,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columns = React.useContext(GridContext) || columnsProp;\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiContainer', slot);\n}\nconst containerClasses = generateUtilityClasses('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);\nexport default containerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getContainerUtilityClass } from './containerClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nconst ContainerRoot = styled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  width: '100%',\n  marginLeft: 'auto',\n  boxSizing: 'border-box',\n  marginRight: 'auto',\n  display: 'block'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}), ({\n  theme,\n  ownerState\n}) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n  const value = theme.breakpoints.values[breakpoint];\n\n  if (value !== 0) {\n    acc[theme.breakpoints.up(breakpoint)] = {\n      maxWidth: `${value}${theme.breakpoints.unit}`\n    };\n  }\n\n  return acc;\n}, {}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.maxWidth === 'xs' && {\n  [theme.breakpoints.up('xs')]: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  [theme.breakpoints.up(ownerState.maxWidth)]: {\n    maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n  }\n}));\nconst Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  });\n\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    fixed,\n    maxWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ContainerRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Container;","import useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport { getChartOptions } from \"../../constants\";\r\nimport useThemeSelector from \"../../hooks/selectors/useThemeSelector\";\r\nimport NoData from \"./NoData\";\r\n\r\nfunction LineChart({ type = \"line\", smooth, title, xLabels, series }) {\r\n  const smScreen = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n  const { isDark } = useThemeSelector();\r\n\r\n  const options = {\r\n    ...getChartOptions({\r\n      title,\r\n      isDark,\r\n    }),\r\n\r\n    stroke: {\r\n      curve: smooth ? \"smooth\" : \"straight\",\r\n    },\r\n    xaxis: {\r\n      categories: xLabels,\r\n      tooltip: {\r\n        enabled: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        formatter: (value) => value.toFixed(0),\r\n      },\r\n    },\r\n    markers: {\r\n      size: 5,\r\n    },\r\n  };\r\n\r\n  return !series?.length || !series[0]?.data?.length ? (\r\n    <NoData />\r\n  ) : (\r\n    <Chart\r\n      type={type}\r\n      options={options}\r\n      series={series}\r\n      height={smScreen ? 300 : 400}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n","import { useState, useEffect } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport useProjectsSelector from \"../../hooks/selectors/useProjectsSelector\";\r\nimport ChartContainer from \"../Charts/ChartContainer\";\r\nimport LineChart from \"../Charts/LineChart\";\r\nimport NoData from \"../Charts/NoData\";\r\n\r\nfunction TasksCompletedLineChart() {\r\n  const { projects, loading } = useProjectsSelector();\r\n  const [taskCountObj, setTaskCountObj] = useState(null);\r\n  const [drawing, setDrawing] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (projects.length) {\r\n      let taskObjsArr = projects.reduce((acc, project) => {\r\n        acc.push(project.tasks);\r\n        return acc;\r\n      }, []);\r\n\r\n      taskObjsArr = taskObjsArr.flat();\r\n      const doneTasksObjsArr = taskObjsArr.filter(\r\n        (task) => task.type === \"done\"\r\n      );\r\n\r\n      const tasksCountOnDateObj = {};\r\n\r\n      doneTasksObjsArr.forEach((task) => {\r\n        let taskDate = new Date(task.updatedAt).toLocaleDateString(\"default\", {\r\n          day: \"numeric\",\r\n          month: \"short\",\r\n          year: \"2-digit\",\r\n        });\r\n\r\n        !tasksCountOnDateObj[taskDate]\r\n          ? (tasksCountOnDateObj[taskDate] = 1)\r\n          : (tasksCountOnDateObj[taskDate] += 1);\r\n      });\r\n\r\n      const dates = Object.keys(tasksCountOnDateObj);\r\n      dates.sort((a, b) => new Date(a) - new Date(b));\r\n\r\n      const finalTasksCount = {};\r\n      dates\r\n        .slice(-5)\r\n        .forEach((date) => (finalTasksCount[date] = tasksCountOnDateObj[date]));\r\n\r\n      setTaskCountObj(finalTasksCount);\r\n    }\r\n\r\n    !loading && setDrawing(false);\r\n  }, [projects, loading]);\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <Typography variant=\"h5\" align=\"center\">\r\n        Tasks completed\r\n      </Typography>\r\n\r\n      {taskCountObj ? (\r\n        <LineChart\r\n          series={[\r\n            {\r\n              name: \"Tasks\",\r\n              data: Object.values(taskCountObj),\r\n            },\r\n          ]}\r\n          xLabels={Object.keys(taskCountObj)}\r\n        />\r\n      ) : (\r\n        <NoData loading={drawing} />\r\n      )}\r\n    </ChartContainer>\r\n  );\r\n}\r\n\r\nexport default TasksCompletedLineChart;\r\n","import { useState, useEffect } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { isZerosArr } from \"../../utils/arrayHelpers\";\r\nimport useProjectsSelector from \"../../hooks/selectors/useProjectsSelector\";\r\nimport ChartContainer from \"../Charts/ChartContainer\";\r\nimport BarChart from \"../Charts/BarChart\";\r\nimport NoData from \"../Charts/NoData\";\r\n\r\nfunction MostTasksBarChart() {\r\n  const { projects, loading } = useProjectsSelector();\r\n  const [projectTasksObj, setProjectTasksObj] = useState(null);\r\n  const [drawing, setDrawing] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (projects.length) {\r\n      let tasksByProjectObj = projects.reduce((acc, project) => {\r\n        acc[project.name] = project.tasks.length;\r\n        return acc;\r\n      }, {});\r\n\r\n      const sortedProjectNames = Object.keys(tasksByProjectObj).sort(\r\n        (a, b) => tasksByProjectObj[b] - tasksByProjectObj[a]\r\n      );\r\n\r\n      let tasksByProjectObjFinal = {};\r\n      sortedProjectNames\r\n        .slice(0, 5)\r\n        .forEach(\r\n          (projectName) =>\r\n            (tasksByProjectObjFinal[projectName] =\r\n              tasksByProjectObj[projectName])\r\n        );\r\n\r\n      const areAllValuesZeros = isZerosArr(\r\n        Object.values(tasksByProjectObjFinal)\r\n      );\r\n      setProjectTasksObj(areAllValuesZeros ? {} : tasksByProjectObjFinal);\r\n    }\r\n\r\n    !loading && setDrawing(false);\r\n  }, [projects, loading]);\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <Typography variant=\"h5\" align=\"center\">\r\n        Most tasks\r\n      </Typography>\r\n\r\n      {projectTasksObj ? (\r\n        <BarChart\r\n          horizontal\r\n          isMultiColor\r\n          series={[\r\n            {\r\n              name: \"Tasks\",\r\n              data: Object.values(projectTasksObj),\r\n            },\r\n          ]}\r\n          xLabels={Object.keys(projectTasksObj)}\r\n        />\r\n      ) : (\r\n        <NoData loading={drawing} />\r\n      )}\r\n    </ChartContainer>\r\n  );\r\n}\r\n\r\nexport default MostTasksBarChart;\r\n","import { useState, useEffect } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { isZerosArr } from \"../../utils/arrayHelpers\";\r\nimport useProjectsSelector from \"../../hooks/selectors/useProjectsSelector\";\r\nimport ChartContainer from \"../Charts/ChartContainer\";\r\nimport BarChart from \"../Charts/BarChart\";\r\nimport NoData from \"../Charts/NoData\";\r\n\r\nfunction PriorityBarChart() {\r\n  const { projects, loading } = useProjectsSelector();\r\n  const [priorityCountObj, setPriorityCountObj] = useState(null);\r\n  const [drawing, setDrawing] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (projects.length) {\r\n      let taskObjsArr = projects.reduce((acc, project) => {\r\n        acc.push(project.tasks);\r\n        return acc;\r\n      }, []);\r\n\r\n      taskObjsArr = taskObjsArr.flat();\r\n      const taskPriorityCountObj = { low: 0, medium: 0, high: 0 };\r\n\r\n      taskObjsArr.forEach((taskObj) => {\r\n        taskPriorityCountObj[taskObj?.priority] += 1;\r\n      });\r\n\r\n      const areAllValuesZeros = isZerosArr(Object.values(taskPriorityCountObj));\r\n      setPriorityCountObj(areAllValuesZeros ? {} : taskPriorityCountObj);\r\n    }\r\n\r\n    !loading && setDrawing(false);\r\n  }, [projects, loading]);\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <Typography variant=\"h5\" align=\"center\">\r\n        Tasks by priority\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\" mb={2}>\r\n        across projects\r\n      </Typography>\r\n\r\n      {priorityCountObj ? (\r\n        <BarChart\r\n          series={[\r\n            {\r\n              name: \"Tasks\",\r\n              data: Object.values(priorityCountObj),\r\n            },\r\n          ]}\r\n          xLabels={Object.keys(priorityCountObj)}\r\n        />\r\n      ) : (\r\n        <NoData loading={drawing} />\r\n      )}\r\n    </ChartContainer>\r\n  );\r\n}\r\n\r\nexport default PriorityBarChart;\r\n","import { useState, useEffect } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { isZerosArr } from \"../../utils/arrayHelpers\";\r\nimport useProjectsSelector from \"../../hooks/selectors/useProjectsSelector\";\r\nimport ChartContainer from \"../Charts/ChartContainer\";\r\nimport DonutChart from \"../Charts/CircularChart\";\r\nimport NoData from \"../Charts/NoData\";\r\n\r\nfunction TasksDonutChart() {\r\n  const { projects, loading } = useProjectsSelector();\r\n  const [taskTypeCountObj, setTaskTypeCountObj] = useState(null);\r\n  const [drawing, setDrawing] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (projects.length) {\r\n      let taskObjsArr = projects.reduce((acc, project) => {\r\n        acc.push(project.tasks);\r\n        return acc;\r\n      }, []);\r\n\r\n      taskObjsArr = taskObjsArr.flat();\r\n      const typeCountObj = { todo: 0, in_progress: 0, done: 0 };\r\n\r\n      taskObjsArr.forEach((taskObj) => {\r\n        typeCountObj[taskObj?.type] += 1;\r\n      });\r\n\r\n      const areAllValuesZeros = isZerosArr(Object.values(typeCountObj));\r\n      setTaskTypeCountObj(areAllValuesZeros ? {} : typeCountObj);\r\n    }\r\n\r\n    !loading && setDrawing(false);\r\n  }, [projects, loading]);\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <Typography variant=\"h5\" align=\"center\">\r\n        Tasks distribution\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\" mb={2}>\r\n        across projects\r\n      </Typography>\r\n\r\n      {taskTypeCountObj ? (\r\n        <DonutChart\r\n          type=\"donut\"\r\n          series={Object.values(taskTypeCountObj)}\r\n          labels={[\"Todo\", \"In progress\", \"Done\"]}\r\n        />\r\n      ) : (\r\n        <NoData loading={drawing} />\r\n      )}\r\n    </ChartContainer>\r\n  );\r\n}\r\n\r\nexport default TasksDonutChart;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { getProjects } from \"../../store/projects/side-effects\";\r\nimport useProjectsSelector from \"../../hooks/selectors/useProjectsSelector\";\r\nimport ChartContainer from \"../Charts/ChartContainer\";\r\nimport PieChart from \"../Charts/CircularChart\";\r\nimport NoData from \"../Charts/NoData\";\r\n\r\nfunction TechPieChart() {\r\n  const { projects, loading } = useProjectsSelector();\r\n  const [techCountObj, setTechCountObj] = useState(null);\r\n  const [drawing, setDrawing] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProjects());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (projects.length) {\r\n      let techObjsArr = projects.reduce((acc, project) => {\r\n        acc.push(project.technologies);\r\n        return acc;\r\n      }, []);\r\n\r\n      techObjsArr = techObjsArr.flat();\r\n\r\n      const techArr = techObjsArr.reduce((acc, techObj) => {\r\n        acc.push(techObj?.technology?.toLowerCase());\r\n        return acc;\r\n      }, []);\r\n\r\n      const techCountMap = {};\r\n\r\n      techArr.forEach((tech) => {\r\n        // if technology doesn't exist in the object, initialize it to 1,\r\n        // otherwise increment it's count by 1\r\n        !techCountMap[tech]\r\n          ? (techCountMap[tech] = 1)\r\n          : (techCountMap[tech] += 1);\r\n      });\r\n\r\n      setTechCountObj(techCountMap);\r\n    }\r\n\r\n    !loading && setDrawing(false);\r\n  }, [projects, loading]);\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <Typography variant=\"h5\" align=\"center\" mb={2}>\r\n        Technologies used\r\n      </Typography>\r\n\r\n      {techCountObj ? (\r\n        <PieChart\r\n          series={Object.values(techCountObj)}\r\n          labels={Object.keys(techCountObj)}\r\n        />\r\n      ) : (\r\n        <NoData loading={drawing} />\r\n      )}\r\n    </ChartContainer>\r\n  );\r\n}\r\n\r\nexport default TechPieChart;\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport TasksCompletedLineChart from \"./TasksCompletedLineChart\";\r\nimport MostTasksBarChart from \"./MostTasksBarChart\";\r\nimport PriorityBarChart from \"./PriorityBarChart\";\r\nimport TasksDonutChart from \"./TasksDonutChart\";\r\nimport TechPieChart from \"./TechPieChart\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" mb={2} sx={{ fontWeight: \"bold\" }}>\r\n        Dashboard\r\n      </Typography>\r\n\r\n      <Grid container spacing={5} mb={3} justifyContent=\"center\">\r\n        <Grid item xs={12} sm={6}>\r\n          <TasksCompletedLineChart />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <MostTasksBarChart />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TasksDonutChart />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <PriorityBarChart />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TechPieChart />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import DashboardC from \"../../components/Dashboard/Dashboard\";\r\n\r\nfunction Dashboard() {\r\n  return <DashboardC />;\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}