{"version":3,"sources":["components/Shared/Alerts/Error.js","components/Shared/Input.js","hooks/useWindowDimensions.js","components/Auth/PaperContainer.js","hooks/useLocationChange.js","components/Shared/CheckBox.js","validation-schemas/signup.js","utils/validation.js","components/Auth/SignupForm.js","screens/Signup/Signup.js"],"names":["Error","error","severity","sx","marginBottom","Input","type","label","fullWidth","halfMargin","register","errors","rules","props","xsScreen","useMediaQuery","theme","breakpoints","down","width","useWindowDimensions","xsWidth","mb","justifyContent","mx","variant","color","includes","styles","scrollbar","message","getWindowDimensions","window","innerWidth","height","innerHeight","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","paddingTop","paddingBottom","display","flexDirection","alignItems","PaperContainer","children","smScreen","container","minHeight","item","xs","sm","md","position","useLocationChange","action","history","useHistory","unsubscribe","listen","CheckBox","checked","onChange","control","signupSchema","username","required","value","minLength","maxLength","email","validate","isEmail","password","confirmPassword","SignupForm","showPassword","setShowPassword","useAuthSelector","loading","dispatch","useDispatch","useCallback","authActions","resetError","useForm","mode","handleSubmit","formState","onSubmit","data","a","confirm_password","details","signup","unwrap","then","push","ProgressAbsolute","Brand","Typography","mt","disabled","autoFocus","prevState","Box","textAlign","Button","size","mr","StyledLink","to","style","pointerEvents","Signup"],"mappings":"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","file":"static/js/13.d6ad08bd.chunk.js","sourcesContent":["import Alert from \"@mui/material/Alert\";\r\n\r\nfunction Error({ error }) {\r\n  return (\r\n    <Alert severity=\"error\" sx={{ marginBottom: 3 }}>\r\n      {error}\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","import useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport { styles } from \"../../constants\";\r\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\r\n\r\nfunction Input({\r\n  type,\r\n  label,\r\n  fullWidth,\r\n  halfMargin,\r\n  register,\r\n  errors = {},\r\n  rules,\r\n  ...props\r\n}) {\r\n  const xsScreen = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n  const { width } = useWindowDimensions();\r\n\r\n  const xsWidth = width - width / 10;\r\n\r\n  return (\r\n    <Box\r\n      mb={halfMargin ? 2 : 4}\r\n      justifyContent=\"center\"\r\n      width={xsScreen ? xsWidth : 350}\r\n      sx={{ mx: \"auto\" }}\r\n    >\r\n      <TextField\r\n        fullWidth={fullWidth}\r\n        type={type}\r\n        label={label}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        {...register?.(label, rules)}\r\n        {...props}\r\n        sx={\r\n          [\"description\", \"body\"].includes(label) ? { ...styles.scrollbar } : {}\r\n        }\r\n      />\r\n\r\n      {errors[label] && (\r\n        <Typography variant=\"caption\" color=\"error\">\r\n          {errors[label].message || errors[label]}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return { width, height };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nexport default useWindowDimensions;\r\n","import useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst styles = {\r\n  paddingTop: 5,\r\n  paddingBottom: 3,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nfunction PaperContainer({ children }) {\r\n  const smScreen = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n\r\n  return (\r\n    <Container>\r\n      <Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        sx={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Grid item xs={12} sm={8} md={6} sx={smScreen ? styles : null}>\r\n          {smScreen ? (\r\n            children\r\n          ) : (\r\n            <Paper\r\n              sx={{\r\n                ...styles,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              {children}\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PaperContainer;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction useLocationChange(action) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = history.listen(() => action());\r\n    return () => unsubscribe();\r\n  }, [history, action]);\r\n}\r\n\r\nexport default useLocationChange;\r\n","import FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nfunction CheckBox({ label, checked, onChange, ...props }) {\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox checked={checked} onChange={onChange} {...props} />}\r\n      label={label}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CheckBox;\r\n","import { isValidEmail } from \"../utils/validation\";\r\n\r\nconst signupSchema = {\r\n  username: {\r\n    required: { value: true, message: \"Username is required\" },\r\n    minLength: {\r\n      value: 3,\r\n      message: \"Username should be atleast 3 characters long\",\r\n    },\r\n    maxLength: {\r\n      value: 50,\r\n      message: \"Username cannot be more than 50 characters long\",\r\n    },\r\n  },\r\n\r\n  email: {\r\n    required: { value: true, message: \"Email is required\" },\r\n    validate: (value) => isValidEmail(value) || \"Invalid email address\",\r\n  },\r\n\r\n  password: {\r\n    required: { value: true, message: \"Password is required\" },\r\n    minLength: {\r\n      value: 6,\r\n      message: \"Password should be atleast 6 characters long\",\r\n    },\r\n  },\r\n\r\n  confirmPassword: {\r\n    required: { value: true, message: \"Confirm password is required\" },\r\n  },\r\n};\r\n\r\nexport default signupSchema;\r\n","import isEmail from \"validator/lib/isEmail\";\r\n\r\nconst isValidEmail = (email) => isEmail(email);\r\n\r\nexport { isValidEmail };\r\n","import { useState, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport { signup } from \"../../store/auth/side-effects\";\r\nimport { authActions } from \"../../store/auth/auth-slice\";\r\nimport useLocationChange from \"../../hooks/useLocationChange\";\r\nimport useAuthSelector from \"../../hooks/selectors/useAuthSelector\";\r\nimport signupSchema from \"../../validation-schemas/signup\";\r\nimport ProgressAbsolute from \"../Shared/Loaders/ProgressAbsolute\";\r\nimport StyledLink from \"../Shared/StyledLink\";\r\nimport PaperContainer from \"./PaperContainer\";\r\nimport Error from \"../Shared/Alerts/Error\";\r\nimport CheckBox from \"../Shared/CheckBox\";\r\nimport Input from \"../Shared/Input\";\r\nimport Brand from \"../Shared/Brand\";\r\n\r\nfunction SignupForm() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { loading, error } = useAuthSelector();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const action = useCallback(() => {\r\n    error && dispatch(authActions.resetError());\r\n  }, [dispatch, error]);\r\n\r\n  useLocationChange(action);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onTouched\" });\r\n\r\n  const onSubmit = async (data) => {\r\n    const {\r\n      username,\r\n      email,\r\n      password,\r\n      \"confirm password\": confirm_password,\r\n    } = data;\r\n\r\n    const details = {\r\n      username,\r\n      email,\r\n      password,\r\n      confirm_password,\r\n    };\r\n\r\n    dispatch(signup(details))\r\n      .unwrap()\r\n      .then(\r\n        () => {\r\n          history.push(\"/login\");\r\n        },\r\n        () => {}\r\n      );\r\n  };\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <PaperContainer>\r\n      {loading && <ProgressAbsolute />}\r\n\r\n      <Brand />\r\n      <Typography mt={1} mb={4}>\r\n        Create an account\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {error && <Error error={error} />}\r\n\r\n        <Input\r\n          fullWidth\r\n          type=\"text\"\r\n          label=\"username\"\r\n          register={register}\r\n          errors={errors}\r\n          rules={signupSchema.username}\r\n          disabled={loading}\r\n          autoFocus\r\n        />\r\n\r\n        <Input\r\n          fullWidth\r\n          type=\"text\"\r\n          label=\"email\"\r\n          register={register}\r\n          errors={errors}\r\n          rules={signupSchema.email}\r\n          disabled={loading}\r\n        />\r\n\r\n        <Input\r\n          fullWidth\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          label=\"password\"\r\n          register={register}\r\n          errors={errors}\r\n          rules={signupSchema.password}\r\n          disabled={loading}\r\n        />\r\n\r\n        <Input\r\n          fullWidth\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          label=\"confirm password\"\r\n          register={register}\r\n          errors={errors}\r\n          rules={signupSchema.confirmPassword}\r\n          disabled={loading}\r\n          halfMargin\r\n        />\r\n\r\n        <CheckBox\r\n          label=\"Show Password\"\r\n          checked={showPassword}\r\n          onChange={toggleShowPassword}\r\n          disabled={loading}\r\n        />\r\n\r\n        <Box textAlign=\"center\" mt={3}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"large\"\r\n            disabled={loading}\r\n          >\r\n            Sign up\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n\r\n      <Box mt={3} mr={2} display=\"flex\">\r\n        <Typography mr={0.5}>Have an account?</Typography>\r\n\r\n        <StyledLink\r\n          to=\"/login\"\r\n          style={{ pointerEvents: loading ? \"none\" : \"auto\" }}\r\n        >\r\n          <Typography color=\"primary\">Sign In</Typography>\r\n        </StyledLink>\r\n      </Box>\r\n    </PaperContainer>\r\n  );\r\n}\r\n\r\nexport default SignupForm;\r\n","import SignupForm from \"../../components/Auth/SignupForm\";\r\n\r\nfunction Signup() {\r\n  return <SignupForm />;\r\n}\r\n\r\nexport default Signup;\r\n"],"sourceRoot":""}